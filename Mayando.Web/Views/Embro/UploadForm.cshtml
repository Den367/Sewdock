@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc.Interface
@using Mayando.Web.Extensions
@using Mayando.Web.Infrastructure
@using Mayando.Web.Properties
@model Mayando.Web.ViewModels.UploadFormViewModel
@{

    ICaptcha captcha = Html.Captcha(Resources.ButtonRefreshText, Resources.FieldInput, 4, Resources.RequiredFieldValidationMessage, false);
}

<div id="uploadform-content">
    @Html.ValidationSummary(Resources.ErrorUploadingText)

    <style>
        .same-row
        {
            display: inline;
            margin: 3%;
        }

        .left-field
        {
            /*float:left;*/
            display: block;
            width: 40%;
            margin: 1%;
        }

        .right-field
        {
            float: right;
            width: 40%;
            margin: 1%;
        }

        #upload-embro-fields-container
        {
            width: 100%;
            position: relative;
        }
    </style>
    <fieldset>
        <h3>@Resources.UploadTitleText</h3>
        <div id="dialog" title="Upload files">
            @using (Html.BeginForm("Upload", "Embro", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "upload-embro-fields-container", @class = "ajax" }))
            {
                @Html.Hidden("ItemID", value: Model.ItemID)
                @Html.Hidden("Count", value: Model.Count)
                @Html.Hidden("Page", value: Model.Page)
                @Html.Hidden("Criteria", value: Model.Criteria)
                <div>

                    <div class="attach">
                        <input id="file_fake" type="text" readonly="readonly" value="@Resources.EmbroFileToBeUploadName" />
                        <span class="file" title="@Resources.SelectAFileText">
                            <input type="file" id="fileUpload" name="fileUpload" class="file_select" />
                            <input type="button" class="file_select_btn btn" value="@Resources.SelectFileButtonTitle"  />
                        </span>
                    </div>
                    <br />
                    <table>
                        <tr>
                            <td>
                                <label id="label-title" for="Title" class="optional  caption-label">@Resources.LabelTitleText</label>
                            </td>
                            <td>
                                @Html.TextBox("Title", Model.Title, new { @id = "title-textbox" })
                                @Html.ValidationMessage("Title", "*")
                            </td>
                            <td id="td-embro-preview" rowspan="2">
                                <img id="upload-preview-image" alt="Embroidery preview" src="@Model.Base64Png" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="TagList" class="optional">@Resources.TagsFieldLabelText</label></td>
                            <td>
                                @{Html.RenderPartial(PartialViewName.InputTags); }</td>
                        </tr>
                    </table>
                </div>
                                  if (User.Identity.IsAuthenticated)
                                  {
                <div>
                    <label for="Hidden" class="required">@Resources.EmbroIsHiddenText</label>
                    @Html.CheckBox("Hidden", Model.Hidden, new { @class = "same-row" })
                    @Html.ValidationMessage("Hidden", "*")
                </div>
                                  }
 
                <div class="required hidden hide" hidden="hidden">
                    <label for="DatePublished" class="required hidden">Date Published:</label>
                    @Html.TextBox("DatePublished", Model.Published ?? DateTime.UtcNow)
                    @Html.ValidationMessage("DatePublished", "*")
                </div>
                <br />
                <div>
                    <label for="Article" class="optional left-field">@Resources.UploadArticleCaptionText</label>
                    @Html.ValidationMessage("Text", "*")
                    @{ Html.RenderPartialHtmlEditor("Article", Model.Article); }
                </div>               
                <div>
                    <input type="submit" value="@Resources.UploadButtonText" class="submit btn"/>
                </div>
            }
        </div>

    </fieldset>

    <script src="//tinymce.cachefly.net/4.1/tinymce.min.js"></script>
    <script>
      
        function splitNameAndExt(path) {
            var name = path.replace(/^.*[\\\/]/, '');
            name = name.substr(0, name.lastIndexOf('.')) || name;
            var ext = path.split('.').pop();
            return { 'name': name, 'ext':ext };
        }
            tinymce.init({ selector: 'textarea.text-editor-html' });
            $("#fileUpload").change(function () {
                
                var path = this.value;
                if (path === null) return;
                var nameInfo = splitNameAndExt(path);                
                document.getElementById('file_fake').value = path;                        
                document.getElementById('tagList-textbox').value = "tagme;" + nameInfo.name + ";" + nameInfo.ext;               
                $("#upload-embro-fields-container").submit();
              
            });
            function getDoc(frame) {
                var doc = null;
                // IE8 cascading access check
                try {
                    if (frame.contentWindow) {
                        doc = frame.contentWindow.document;
                    }
                } catch (err) {
                }
                if (doc) { // successful getting content
                    return doc;
                }
                try { // simply checking may throw in ie8 under ssl or mismatched protocol
                    doc = frame.contentDocument ? frame.contentDocument : frame.document;
                } catch (err) {
                    // last attempt
                    doc = frame.document;
                }
                return doc;
            }

          //  window.onload(function() {
                $("#upload-embro-fields-container").submit(function(e) {
                    if (e.defaultPrevented) {
                        e.unbind();
                        return;
                    }
                    var formObj = $(this);
                    var formURL = formObj.attr("action");

                    if (window.FormData !== undefined)  // for HTML5 browsers
                    {

                        var formData = new FormData(this);
                        // var title = formData.elements["Title"];
                        //console.log(title);
                        $.ajax({
                            url: formURL,
                            type: 'POST',
                            data: formData,
                            enctype: "multipart/form-data",
                            // mimeType: "multipart/form-data",
                            contentType: false,
                            cache: false,
                            processData: false,
                            success: function(data, textStatus, jqXHR) {
                            },
                            error: function(jqXHR, textStatus, errorThrown) {
                            },
                            complete: function(jqXHR, textStatus) {
                                var name = document.getElementById('title-textbox').value;
                                if (name.length == 0) {
                                    var img = $("td#td-embro-preview");
                                    img.html(jqXHR.responseText);
                                    var path = document.getElementById('file_fake').value;
                                    var nameInfo = splitNameAndExt(path);
                                    document.getElementById('title-textbox').value = nameInfo.name;
                                } else {
                                    window.location.reload();
                                }

                            }
                        });
                        e.preventDefault();
                        //e.unbind();
                    } else  //for olden browsers
                    {
                        //generate a random id
                        var iframeId = 'unique' + (new Date().getTime());

                        //create an empty iframe
                        var iframe = $('<iframe src="javascript:false;" name="' + iframeId + '" />');

                        //hide it
                        iframe.hide();

                        //set form target to iframe
                        formObj.attr('target', iframeId);

                        //Add iframe to body
                        iframe.appendTo('body');
                        iframe.load(function(e) {
                            var doc = getDoc(iframe[0]);
                            var docRoot = doc.body ? doc.body : doc.documentElement;
                            var data = docRoot.innerHTML;
                            //data is returned from server.

                        });

                    }
                });
        //    });
    </script>
</div>
@*<script type="text/javascript" src="@Url.Content("~/Scripts/tiny_mce/tiny_mce.js")" ></script>
        <script type="text/javascript" src="@Url.Content("~/Scripts/tiny_mce_init.js")" ></script>     
   *@